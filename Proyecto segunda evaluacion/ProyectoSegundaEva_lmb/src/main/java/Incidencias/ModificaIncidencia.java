/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Incidencias;

import baseDatos.Conectar;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author damA
 */
public class ModificaMiIncidencia extends javax.swing.JDialog {

    Conectar contectar = null;
    String usu = "";
    String id = "";
    String des = "";
    String obs = "";
    String idIn = "";

    /**
     * Creates new form ModificaMiIncidencia
     */
    public ModificaMiIncidencia(javax.swing.JDialog parent, boolean modal, String usuario, String descripcion, String observaciones, String idIncidencia) throws SQLException {
        super(parent, modal);
        initComponents();

        usu = usuario;
        des = descripcion;
        obs = observaciones;
        idIn = idIncidencia;
        
        

        jTextFieldDescripcion.setText(des);
        jTextFieldObservaciones.setText(obs);

        consultarUbicacion(jComboBoxUbicacion);
        consultarEstado(jComboBoxEstado);
        consultarUrgencia(jComboBoxUrgencia);
        consultarId();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxUrgencia = new javax.swing.JComboBox<>();
        jButtonModificarIncidencia = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextFieldDescripcion = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextFieldObservaciones = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxEstado = new javax.swing.JComboBox<>();
        jComboBoxUbicacion = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButtonModificarIncidencia.setText("Modificar incidencia");
        jButtonModificarIncidencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarIncidenciaActionPerformed(evt);
            }
        });

        jTextFieldDescripcion.setColumns(20);
        jTextFieldDescripcion.setLineWrap(true);
        jTextFieldDescripcion.setRows(5);
        jScrollPane2.setViewportView(jTextFieldDescripcion);

        jLabel2.setText("Descripcion");

        jTextFieldObservaciones.setColumns(20);
        jTextFieldObservaciones.setLineWrap(true);
        jTextFieldObservaciones.setRows(5);
        jScrollPane3.setViewportView(jTextFieldObservaciones);

        jLabel3.setText("Estado");

        jLabel5.setText("Urgencia");

        jLabel6.setText("Ubicacion");

        jLabel7.setText("Observaciones");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxEstado, 0, 231, Short.MAX_VALUE)
                    .addComponent(jComboBoxUbicacion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxUrgencia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3))
                .addGap(96, 96, 96))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jButtonModificarIncidencia, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBoxUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxUrgencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(jButtonModificarIncidencia)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonModificarIncidenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarIncidenciaActionPerformed
        String descripcion = jTextFieldDescripcion.getText();

        String observaciones = jTextFieldObservaciones.getText();

        String est = jComboBoxEstado.getSelectedItem().toString();
        String[] estado = est.split("-");
        String idEstado = estado[0];

        String ubi = jComboBoxUbicacion.getSelectedItem().toString();
        String[] ubicacion = ubi.split("-");
        String idUbicacion = ubicacion[0];

        String urg = jComboBoxUrgencia.getSelectedItem().toString();
        String[] urgencia = urg.split("-");
        String idUrgencia = urgencia[0];

        try {
            PreparedStatement ps = null;
            contectar = new Conectar();
            Connection conexion = contectar.getConexion();


            String sql = "UPDATE man_incidencias SET descripcion='"+descripcion+"', id_estado ='"+idEstado+"', nivel_urgencia = '"+idUrgencia+"', \n"
                    + "id_ubicacion = '"+idUbicacion+"', observaciones = '"+observaciones+"' \n"
                    + "WHERE (id_incidencia = '"+idIn+"');";

            ps = conexion.prepareStatement(sql);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(this, "Incidencia modificada");

            conexion.close();
            

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "No se han podido insertar los datos");
        }
        
        dispose();

    }//GEN-LAST:event_jButtonModificarIncidenciaActionPerformed

    public void consultarUbicacion(JComboBox comboBox) {
        PreparedStatement ps = null;
        contectar = new Conectar();
        Connection conexion = contectar.getConexion();
        String sql = "SELECT id_ubicacion,ubicacion FROM mantenimiento_mollon.man_ubicacion;";
        try {
            ps = conexion.prepareStatement(sql);
            ResultSet result = ps.executeQuery();

            while (result.next()) {
                comboBox.addItem(result.getString("id_ubicacion") + "-" + result.getString("ubicacion"));
            }

            conexion.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void consultarUrgencia(JComboBox comboBox) {
        PreparedStatement ps = null;
        contectar = new Conectar();
        Connection conexion = contectar.getConexion();
        String sql = "SELECT id_urgencia,urgencia FROM mantenimiento_mollon.man_urgencia;";
        try {
            ps = conexion.prepareStatement(sql);
            ResultSet result = ps.executeQuery();

            while (result.next()) {
                comboBox.addItem(result.getString("id_urgencia") + "-" + result.getString("urgencia"));
            }

            conexion.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void consultarEstado(JComboBox comboBox) {
        PreparedStatement ps = null;
        contectar = new Conectar();
        Connection conexion = contectar.getConexion();
        String sql = "SELECT id_estado,estado FROM mantenimiento_mollon.man_estado;";
        try {
            ps = conexion.prepareStatement(sql);
            ResultSet result = ps.executeQuery();

            while (result.next()) {
                comboBox.addItem(result.getString("id_estado") + "-" + result.getString("estado"));
            }

            conexion.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void consultarId() throws SQLException {

        contectar = new Conectar();
        Connection conexion = contectar.getConexion();
        String[] idArray = new String[1];
        if (conexion != null) {

            try {
                Statement s = conexion.createStatement();
                ResultSet rs = s.executeQuery("SELECT id_profesor FROM mantenimiento_mollon.fp_profesor where login='" + usu + "';");

                while (rs.next()) {
                    idArray[0] = rs.getString(1);
                }
                id = idArray[0];

            } catch (SQLException sQLException) {
                JOptionPane.showMessageDialog(this, "Datos no cargados");

            }

            conexion.close();

        } else {
            JOptionPane.showMessageDialog(this, "Conoxion fallida");
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonModificarIncidencia;
    private javax.swing.JComboBox<String> jComboBoxEstado;
    private javax.swing.JComboBox<String> jComboBoxUbicacion;
    private javax.swing.JComboBox<String> jComboBoxUrgencia;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextFieldDescripcion;
    private javax.swing.JTextArea jTextFieldObservaciones;
    // End of variables declaration//GEN-END:variables
}
