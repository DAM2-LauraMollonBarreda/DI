
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Action;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author damA
 */
public class PantallaPrincipal extends javax.swing.JFrame {
Conectar conectar = null;
    /**
     * Creates new form PantallaPrincipal
     */
    public PantallaPrincipal() {
        initComponents();

        refrescarTabla();
        System.out.println("hoa");
        crearpopupmenu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUsuarios = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemDatos = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableUsuarios);

        jMenu1.setText("Usuarios");

        jMenuItemDatos.setText("A単ade datos");
        jMenuItemDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDatosActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemDatos);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 854, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDatosActionPerformed
        IntroducirDatos intrDatos = new IntroducirDatos(this, true);
        intrDatos.setVisible(true);
        refrescarTabla();
    }//GEN-LAST:event_jMenuItemDatosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaPrincipal().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemDatos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUsuarios;
    // End of variables declaration//GEN-END:variables

    private void refrescarTabla() {
        //PARTE SIN BASE DE DATOS 
        DefaultTableModel dtm = new DefaultTableModel();
        dtm.setColumnIdentifiers(new String[]{"id","Profesion", "Edad" , "Hermanos", "Sexo", "Deporte", "Cual", "Compras" , "Tele" , "Cine"});
        /*List<Usuarios> listaUsuarios  = LogicaIndentificacion.getListaUsuarios();
        for(Usuarios usuarios:listaUsuarios){
            dtm.addRow(usuarios.toArrayString());
        }*/
        jTableUsuarios.setModel(dtm);
        
        //ACCESO A BASE DE DATOS 
        //Conectamos con la base de datos
        conectar = new Conectar();
        Connection conexion = conectar.getConexion();
        String[] usuBd = new String[9];
        if (conexion != null) {
            try {
                Statement s = conexion.createStatement();
                ResultSet rs = s.executeQuery ("select * from usuarios");
                 
                while (rs.next()) {
                    //dtm.addRow(rs);
                    
                    usuBd[0]= rs.getString(1);
                    usuBd[1]= rs.getString(2);
                    usuBd[2]= rs.getString(3);
                    usuBd[3]= rs.getString(4);
                    usuBd[4]= rs.getString(5);
                    usuBd[5]= rs.getString(6);
                    usuBd[6]= rs.getString(7);
                    usuBd[7]= rs.getString(8);
                    usuBd[8]= rs.getString(9);
                    System.out.println(rs.getString(1));
                    
                    dtm.addRow(usuBd);
                }
            } catch (SQLException ex) {
                Logger.getLogger(PantallaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }           
        }
        else{
            JOptionPane.showMessageDialog(this, "Conoxion fallida");
        }
    }

    private void crearpopupmenu() {
        JPopupMenu popupMenu = new JPopupMenu();
        JMenuItem menuItemAnadir = new JMenuItem("A単adir nuevo usuario");
        JMenuItem menuItemBorrar = new JMenuItem("Eliminar fila");
        JMenuItem menuItemBorrarTodo = new JMenuItem("Eliminar toda la tabla");
        
               
        popupMenu.add(menuItemAnadir);
        popupMenu.add(menuItemBorrar);
        popupMenu.add(menuItemBorrarTodo);
        
        jTableUsuarios.setComponentPopupMenu(popupMenu);
        
        menuItemAnadir.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent arg0) {
               anadirUsuario();
            }
        });

        menuItemBorrar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent arg0) {
               borrarFila();
            }
        });
        
        menuItemBorrarTodo.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent arg0) {
               borrarTodo();
            }
        });
        
    }
    
    public void anadirUsuario(){
        IntroducirDatos intrDatos = new IntroducirDatos(this, true);
        intrDatos.setVisible(true);
        refrescarTabla();
    }
    
    public void borrarFila(){
        int cuentaFilasSeleccionadas = jTableUsuarios.getSelectedRowCount(); 

        if (cuentaFilasSeleccionadas == 0) { 
            JOptionPane.showMessageDialog(this, "No hay filas seleccionadas","Error",JOptionPane.WARNING_MESSAGE);  
        } else { 
            int resultado=JOptionPane.showConfirmDialog(this, "多Esta seguro que desea eliminar?","多Seguro?", JOptionPane.YES_NO_CANCEL_OPTION);
            if (resultado==JOptionPane.YES_OPTION) {
                LogicaIndentificacion.listaUsuarios.remove(jTableUsuarios.getSelectedRow());
                refrescarTabla();
            }else if (resultado==JOptionPane.NO_OPTION) {
                JOptionPane.showConfirmDialog(this, "Fila no borrada","",JOptionPane.ERROR_MESSAGE);
            }
            else if (resultado==JOptionPane.CANCEL_OPTION) {
                JOptionPane.showConfirmDialog(this, "Operacion cancelada","",JOptionPane.WARNING_MESSAGE);
            }
        } 
    }

    
     public void borrarTodo(){
        int cuentaFilasSeleccionadas = jTableUsuarios.getSelectedRowCount(); 

        if (cuentaFilasSeleccionadas == 0) { 
            JOptionPane.showMessageDialog(this, "No hay filas seleccionadas","Error",JOptionPane.ERROR_MESSAGE);  
        } else { 
            int resultado=JOptionPane.showConfirmDialog(this, "多Esta seguro que desea eliminar?","多Seguro?", JOptionPane.YES_NO_CANCEL_OPTION);
            if (resultado==JOptionPane.YES_OPTION) {
                LogicaIndentificacion.listaUsuarios.clear();
                refrescarTabla();
            }else if (resultado==JOptionPane.NO_OPTION) {
                JOptionPane.showConfirmDialog(this, "Fila no borrada","",JOptionPane.ERROR_MESSAGE);
            }
            else if (resultado==JOptionPane.CANCEL_OPTION) {
                JOptionPane.showConfirmDialog(this, "Operacion cancelada","",JOptionPane.WARNING_MESSAGE);
            }
        } 
    }

   
    
   

}



